From 9d746e966f4923877644521aa9892fedc48560de Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Wed, 14 Nov 2018 22:26:27 -0800
Subject: [PATCH] Add support for decompressing more tarballs

Detect xz and zst compressions too. This allows teams that know all
their iceccd servers have been updated to this version to package the
environment using more efficient file formats.

The test is updated to detect different file extensions, should
icecc-create-env produce them.
---
 client/remote.cpp      |  2 +-
 daemon/environment.cpp | 26 +++++++++++---------------
 tests/test.sh          |  9 +++++----
 3 files changed, 17 insertions(+), 20 deletions(-)

diff --git a/client/remote.cpp b/client/remote.cpp
index 0f11c2d..5f224ba 100644
--- a/client/remote.cpp
+++ b/client/remote.cpp
@@ -164,7 +164,7 @@ rip_out_paths(const Environments &envs, map<string, string> &version_map, map<st
 
     Environments env2;
 
-    static const char *suffs[] = { ".tar.bz2", ".tar.gz", ".tar", ".tgz", NULL };
+    static const char *suffs[] = { ".tar.xz", ".tar.zst", ".tar.bz2", ".tar.gz", ".tar", ".tgz", NULL };
 
     string versfile;
 
diff --git a/daemon/environment.cpp b/daemon/environment.cpp
index 3cb47c5..23b784b 100644
--- a/daemon/environment.cpp
+++ b/daemon/environment.cpp
@@ -453,13 +453,17 @@ pid_t start_install_environment(const std::string &basename, const std::string &
     }
 
     fmsg = dynamic_cast<FileChunkMsg*>(msg);
-    enum { BZip2, Gzip, None} compression = None;
+    const char *decompressor = NULL;
 
     if (fmsg->len > 2) {
         if (fmsg->buffer[0] == 037 && fmsg->buffer[1] == 0213) {
-            compression = Gzip;
+            decompressor = "-z";    // --gzip
         } else if (fmsg->buffer[0] == 'B' && fmsg->buffer[1] == 'Z') {
-            compression = BZip2;
+            decompressor = "-j";    // --bzip2
+        } else if (fmsg->buffer[0] == 0xfd && fmsg->buffer[1] == 0x37) {
+            decompressor = "-J";    // --xz
+        } else if (fmsg->buffer[0] == 0x28 && fmsg->buffer[1] == 0xb5) {
+            decompressor = "-Iunzstd";
         }
     }
 
@@ -553,21 +557,13 @@ pid_t start_install_environment(const std::string &basename, const std::string &
     }
 
     char **argv;
-    argv = new char*[6];
+    argv = new char*[5];
     argv[0] = strdup(TAR);
-    argv[1] = strdup("-C");
+    argv[1] = strdup("-xC");
     argv[2] = strdup(dirname.c_str());
+    argv[3] = decompressor ? strdup(decompressor) : 0;
+    argv[4] = 0;
 
-    if (compression == BZip2) {
-        argv[3] = strdup("-xjf");
-    } else if (compression == Gzip) {
-        argv[3] = strdup("-xzf");
-    } else if (compression == None) {
-        argv[3] = strdup("-xf");
-    }
-
-    argv[4] = strdup("-");
-    argv[5] = 0;
     execv(argv[0], argv);
     log_perror("execv failed");
     _exit(100);
diff --git a/tests/test.sh b/tests/test.sh
index 17ad82f..7a16f92 100755
--- a/tests/test.sh
+++ b/tests/test.sh
@@ -1019,15 +1019,16 @@ test_build_native_helper()
     compiler=$1
     add_skip=$2
     pushd "$testdir" >/dev/null
+    XZ_OPT=-2 GZIP=-3 \
     ICECC_DEBUG=debug ICECC_LOGFILE="$testdir"/icecc.log ${icecc} --build-native $compiler > "$testdir"/icecc-build-native-output
     if test $? -ne 0; then
         return 1
     fi
-    local tgz=$(grep "^creating .*\.tar\.gz$" "$testdir"/icecc-build-native-output | sed -e "s/^creating //")
-    if test -z "$tgz"; then
+    local tarball=$(sed -En '/^creating (.*\.tar\..*)/s//\1/p' "$testdir"/icecc-build-native-output)
+    if test -z "$tarball"; then
         return 2
     fi
-    sudo -n -- ${icecc_test_env} -q "$tgz"
+    sudo -n -- ${icecc_test_env} -q "$tarball"
     retcode=$?
     if test $retcode -eq 1; then
         echo Cannot verify environment, use sudo, skipping test.
@@ -1038,7 +1039,7 @@ test_build_native_helper()
         echo icecc_test_env failed to validate the environment
         return 3
     fi
-    rm -f $tgz "$testdir"/icecc-build-native-output
+    rm -f $tarball "$testdir"/icecc-build-native-output
     popd >/dev/null
     return 0
 }
-- 
2.19.2

